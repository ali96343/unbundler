#!/usr/bin/env python3

import asyncio
import httpx
import time
import os, sys
import socket


# expected "spy-urls.txt" in tte dir and running py4web
# 


def isOpen(ip, port):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        s.connect((ip, int(port)))
        s.shutdown(2)
        return True
    except:
        return False


def read_urls(fnm="spy-urls.txt"):
    try:
        with open(fnm, "r") as f:
            return f.readlines()
    except:
        sys.exit(f"stop! not found {fnm}")


start_time = time.time()


async def get_p4w_url(client, url):
    resp = await client.get(url)
    if resp.status_code != 200:
        # sys.exit(f"stop! url error {url}")
        return url
    return "ok"


async def main():

    host, port = "127.0.0.1", "8000"

    if not isOpen(host, port):
        sys.exit("stop! run, pls, py4web")

    p4w_url = f"http://{host}:{port}"

    url_list = [f"{p4w_url}{e}" for e in read_urls()]

    async with httpx.AsyncClient() as client:

        tasks = [ asyncio.ensure_future(get_p4w_url(client, url)) for url in url_list ]

        checked_result = await asyncio.gather(*tasks)

        bad_url = [e for e in checked_result if e != "ok"]

        def report():
            print ('   Test result')
            print("len (url_list): ", len(url_list))
            print("bad_url: ", bad_url)
            print("len (bad_url): ", len(bad_url))

        report()

asyncio.run(main())
diff = time.time() - start_time
print(f'time = {diff:.2f} seconds')

